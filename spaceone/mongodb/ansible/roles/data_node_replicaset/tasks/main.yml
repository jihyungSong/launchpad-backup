---
- name: Create config server config file from template
  template:
    src: mongod_without_security.conf.template
    dest: /etc/mongod.conf
  vars:
    shard_name: "{{ replica_info[host_group].shard }}"
  register: mongod_conf
  notify:
    - restart mongod

- name: Restart mongod service
  service:
    name: mongod
    state: restarted
  when: mongod_conf.changed

- name: Pause for 3 seconds for mongod process
  pause:
    seconds: 3

#- name: Create admin user
#  mongodb_user:
#    login_host: localhost:{{ shard_port }}
#    database: admin
#    name: "{{ admin_user }}"
#    password: "{{ admin_password }}"
#    roles:
#      - db: admin
#        role: root
#    state: present
#  when: ansible_facts.ansible_local.custom.mongodb.rs_primary == "true"

- name: Shard node replicaset
  community.mongodb.mongodb_replicaset:
    login_host: localhost:{{ shard_port }}
#    login_user: "{{ admin_user }}"
#    login_password: "{{ admin_password }}"
    login_database: admin
    replica_set: "{{ replica_info[host_group].shard }}"
    members: "{{ replica_info[host_group].members }}"
    arbiter_at_index: "{{ replica_info[host_group].arbiter_index }}"
  when: ansible_facts.ansible_local.custom.mongodb.rs_primary == "true"

- name: Create admin user
  mongodb_user:
    login_host: localhost:{{ shard_port }}
    database: admin
    name: "{{ admin_user }}"
    password: "{{ admin_password }}"
    roles:
      - db: admin
        role: root
    state: present
  when: ansible_facts.ansible_local.custom.mongodb.rs_primary == "true"

- name: Change config server(with security) config from template
  template:
    src: mongod.conf.template
    dest: /etc/mongod.conf
  vars:
    shard_name: "{{ replica_info[host_group].shard }}"
  notify:
    - restart mongod
  register: mongod_conf_with_security

- name: Restart mongod service
  service:
    name: mongod
    state: restarted
  when: mongod_conf_with_security.changed

- name: Pause for 3 seconds for mongod process
  pause:
    seconds: 3
